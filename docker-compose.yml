services:
  # SQL Server for database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver-container
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SQL_SERVER_PASSWORD}
    ports:
      - "${SQL_SERVER_PORT}:${SQL_SERVER_PORT}"
    networks:
      - our-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SQL_SERVER_PASSWORD} -Q 'SELECT 1'"]
      interval: 20s
      timeout: 5s
      retries: 5
    volumes:
      - sql_data:/var/opt/mssql

  # Keycloak for authentication and authorization
  keycloak:
    image: ${KEYCLOAK_IMAGE}
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
    networks:
      - our-network

  # API Gateway
  apigateway:
    image: ${APIGATEWAY_IMAGE}
    container_name: apigateway
    ports:
      - "${APIGATEWAY_PORT}:${APIGATEWAY_PORT}"
    depends_on:    
      - sqlserver
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      SERVICE_PORT: ${APIGATEWAY_PORT}
    networks:
      - our-network

  # MultiTenant Stripe API
  multitenant-api:
    image: ${MULTITENANT_API_IMAGE} # Reference to the prebuilt image
    container_name: multitenant-api
    ports:
      - "${SERVICE_PORT}:${SERVICE_PORT}"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ConnectionStrings__AzureServiceBus: ${AZURE_SERVICE_BUS_CONNECTION_STRING}
      ConnectionStrings__DefaultSQLConnection: ${DEFAULT_SQL_CONNECTION}
      SERVICE_BUS_TOPIC_NAME: ${SERVICE_BUS_TOPIC_NAME}
      SERVICE_BUS_SUBSCRIPTION_NAME: ${SERVICE_BUS_SUBSCRIPTION_NAME}
      AZURE_COMMUNICATION_CONNECTION_STRING: ${AZURE_COMMUNICATION_CONNECTION_STRING}
      AZURE_COMMUNICATION_SENDER_EMAIL: ${AZURE_COMMUNICATION_SENDER_EMAIL}
      SERVICE_PORT: ${SERVICE_PORT}
      Stripe__SecretKey: ${STRIPE_SECRET_KEY}
      Stripe__PublishableKey: ${STRIPE_PUBLISHABLE_KEY}
      Stripe__WebhookSecret: ${STRIPE_WEBHOOK_SECRET}
    depends_on:      
      - keycloak
      - sqlserver
    networks:
      - our-network

  # Messager Service
  messager-service:
    image: ${MESSAGER_SERVICE_IMAGE}
    container_name: messager-service
    ports:
      - "${MESSAGER_SERVICE_PORT}:${MESSAGER_SERVICE_PORT}"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ConnectionStrings__AzureServiceBus: ${AZURE_SERVICE_BUS_CONNECTION_STRING}
      AzureCommunicationServices__ConnectionString: ${AZURE_COMMUNICATION_STRING}
      AzureCommunicationServices__SenderEmail: ${AZURE_SENDER_EMAIL}
      ServiceBus__TopicName: ${SERVICE_BUS_TOPIC_NAME}
      ServiceBus__SubscriptionName: ${SERVICE_BUS_SUBSCRIPTION_NAME}
      SERVICE_PORT: ${MESSAGER_SERVICE_PORT}
    depends_on:      
      - sqlserver
    networks:
      - our-network

# Angular Frontend
  subscription-app:
    build:
      context: ./subscription-app
      dockerfile: Dockerfile
      args:
        CONFIGURATION: ${ANGULAR_BUILD_CONFIGURATION}  # Pass `development` or `production`
    container_name: subscription-app
    ports:
      - "${SUBSCRIPTION_APP_PORT}:80"
    environment:
      PORT: ${SUBSCRIPTION_APP_PORT}
    networks:
      - our-network

volumes:
  sql_data:

networks:
  our-network:
    driver: bridge
